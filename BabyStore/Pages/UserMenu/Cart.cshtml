@page
@model BabyStore.Pages.UserMenu.CartModel

@{
    ViewData["Title"] = "Cart";
    Layout = "~/Pages/Shared/_Layout.cshtml";
}
<div class="container mt-5">
    <h2>Giỏ hàng</h2>

    @if (Model.CartItems.Count == 0)
    {
        <p>Giỏ hàng của bạn trống.</p>
    }
    else
    {
        <div class="row">
            <div class="col-md-9">
                <div class="card">
                    <div class="card-header">
                        <div class="d-flex justify-content-between align-items-center">
                            <span>Baby Store</span>
                            <a href="#" class="text-muted" onclick="clearCart()">Xóa tất cả</a>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="row mb-3 align-items-center">
                            <div class="col-2 text-center"><strong>Hình ảnh</strong></div>
                            <div class="col-4"><strong>Tên sản phẩm</strong></div>
                            <div class="col-2 text-center"><strong>Số lượng</strong></div>
                            <div class="col-2 text-end"><strong>Thành tiền</strong></div>
                            <div class="col-2 text-end"><strong>Xóa</strong></div>
                        </div>
                        <hr />
                        @foreach (var item in Model.CartItems)
                        {
                            <div class="row mb-3 align-items-center cart-item" id="cart-item-@item.ProductId">
                                <div class="col-2 text-center">
                                    <a asp-page="/UserMenu/ProductDetailsMenu" asp-route-id="@item.ProductId">
                                        <img src="@item.ProductImage" class="img-thumbnail" style="width: 100px; height: 100px;" />
                                    </a>
                                </div>
                                <div class="col-4">
                                    <h5 class="product-name">
                                        <a asp-page="/UserMenu/ProductDetailsMenu" asp-route-id="@item.ProductId" class="text-primary">@item.ProductName</a>
                                    </h5>
                                    <p class="text-muted">ProCode: @item.ProductId</p>
                                </div>
                                <div class="col-2 text-center">
                                    <form method="post" asp-page-handler="UpdateQuantity" class="quantity-form">
                                        <div class="quantity-group">
                                            <input type="hidden" name="ProductId" value="@item.ProductId" />
                                            <input type="number" name="Quantity" class="form-control form-control-sm text-center quantity-input" value="@item.Quantity" min="1" max="@item.AvailableQuantity" id="quantity-@item.ProductId" oninput="validateQuantity(this)" />
                                            <button type="submit" class="btn btn-primary btn-sm quantity-button">Cập nhật</button>
                                        </div>
                                    </form>
                                </div>
                                <div class="col-2 text-end">
                                    <h5 id="total-@item.ProductId">@string.Format("{0:n0}₫", item.Quantity * item.Price)</h5>
                                </div>
                                <div class="col-2 text-end">
                                    <form method="post" asp-page-handler="RemoveItem" onsubmit="return confirm('Bạn có chắc muốn xóa sản phẩm này khỏi giỏ hàng không?');">
                                        <input type="hidden" name="ProductId" value="@item.ProductId" />
                                        <button type="submit" class="btn btn-link text-muted">Xóa</button>
                                    </form>
                                </div>
                            </div>
                            <hr />
                        }
                    </div>
                </div>
            </div>

            <div class="col-md-3">
                <!-- Khuyến mãi card -->
                <div class="card mb-3">
                    <div class="card-header">
                        <span>Khuyến mãi</span>
                    </div>
                    <div class="card-body">
                        <div class="form-group">
                            <label for="voucherSelect">Chọn Voucher</label>
                            <select id="voucherSelect" class="form-control">
                                <option value="">Chọn voucher</option>
                                @foreach (var voucher in Model.ActiveVouchers)
                                {
                                    <option value="@voucher.VoucherCode" data-discount="@voucher.Discount" data-minamount="@voucher.MinimumOrderAmount">
                                        @voucher.VoucherCode - @string.Format("{0:n0}%", voucher.Discount)
                                        (Tối thiểu: @string.Format("{0:n0}₫", voucher.MinimumOrderAmount))
                                    </option>
                                }
                            </select>

                        </div>
                        <div class="form-group mt-3">
                            <span id="voucher-feedback" class="text-danger"></span>
                        </div>
                    </div>
                </div>

                <!-- Địa chỉ giao hàng card -->
                <div class="card mb-3">
                    <div class="card-header">
                        <span>Địa chỉ giao hàng</span>
                    </div>
                    <div class="card-body">
                        <p>@Model.ShippingAddress</p>
                    </div>
                </div>

                <!-- Tóm tắt đơn hàng card -->
                <div class="card">
                    <div class="card-header">
                        <span>Tóm tắt đơn hàng</span>
                    </div>
                    <div class="card-body">
                        <div class="d-flex justify-content-between mb-2">
                            <strong>Tổng tiền</strong>
                            <span id="total-price">@string.Format("{0:n0}₫", Model.TotalPrice)</span>
                        </div>
                        <div class="d-flex justify-content-between mb-2">
                            <strong>Giảm giá</strong>
                            <span id="voucher-discount">0₫</span>
                        </div>
                        <div class="d-flex justify-content-between">
                            <strong>Tổng thanh toán</strong>
                            <span id="final-price">@string.Format("{0:n0}₫", Model.FinalPrice)</span>
                        </div>
                    </div>
                </div>

                <!-- Checkout button -->
                <a href="#" class="btn btn-primary mt-3">Thanh toán</a>
            </div>
        </div>
    }
</div>

@section Scripts {
    <script>
        document.getElementById('voucherSelect').addEventListener('change', function () {
            var select = this;
            var voucherCode = select.value;
            var minAmount = parseFloat(select.options[select.selectedIndex].getAttribute('data-minamount'));
            var discount = parseFloat(select.options[select.selectedIndex].getAttribute('data-discount'));
            var totalPrice = parseFloat(document.getElementById('total-price').innerText.replace('₫', '').replace(/,/g, ''));

            if (voucherCode === "" || totalPrice < minAmount) {
                document.getElementById('voucher-feedback').innerHTML = `<span style="color: green; font - weight: bold; ">"Voucher không hợp lệ hoặc giá trị đơn hàng không đủ điều kiện.< /span>`;
                document.getElementById('voucher-discount').innerText = "0₫";
                document.getElementById('final-price').innerText = totalPrice.toFixed(0).replace(/\B(?=(\d{3})+(?!\d))/g, ',') + '₫';
                return;
            }

            var discountAmount = (totalPrice * (discount / 100)).toFixed(0);
            var finalPrice = (totalPrice - discountAmount).toFixed(0);

            document.getElementById('voucher-feedback').innerHTML = `<span style="color: green; font-weight: bold;">"Voucher ${voucherCode}" đã được áp dụng.</span>`;
            document.getElementById('voucher-discount').innerText = `-${discountAmount.replace(/\B(?=(\d{3})+(?!\d))/g, ',')}₫`;
            document.getElementById('final-price').innerText = finalPrice.replace(/\B(?=(\d{3})+(?!\d))/g, ',') + '₫';
        });




        function validateQuantity(input) {
            var max = parseInt(input.max);
            var value = parseInt(input.value);
            if (value > max) {
                input.value = max;
            }
        }

        function clearCart() {
            if (confirm('Bạn có chắc muốn xóa tất cả sản phẩm khỏi giỏ hàng không?')) {
                // Implement your clear cart logic here
                // For example, redirect to a page that clears the cart or make an AJAX call to clear it
            }
        }
    </script>
}
