@page
@model BabyStore.Pages.UserMenu.CartModel

@{
    ViewData["Title"] = "Cart";
    Layout = "~/Pages/Shared/_Layout.cshtml";
}
<div class="container mt-5">
    <h2>Giỏ hàng</h2>

    @if (Model.CartItems.Count == 0)
    {
        <p>Giỏ hàng của bạn trống.</p>
    }
    else
    {
        <div class="row">
            <div class="col-md-9">
                <div class="card">
                    <div class="card-header">
                        <div class="d-flex justify-content-between align-items-center">
                            <span>Baby Store</span>
                            <a href="#" class="text-muted" onclick="clearCart()">Xóa tất cả</a>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="row mb-3 align-items-center">
                            <div class="col-2 text-center"><strong>Hình ảnh</strong></div>
                            <div class="col-4"><strong>Tên sản phẩm</strong></div>
                            <div class="col-2 text-center"><strong>Số lượng</strong></div>
                            <div class="col-2 text-end"><strong>Thành tiền</strong></div>
                            <div class="col-2 text-end"><strong>Xóa</strong></div>
                        </div>
                        <hr />
                        @foreach (var item in Model.CartItems)
                        {
                            <div class="row mb-3 align-items-center cart-item" id="cart-item-@item.ProductId">
                                <div class="col-2 text-center">
                                    <a asp-page="/UserMenu/ProductDetailsMenu" asp-route-id="@item.ProductId">
                                        <img src="@item.ProductImage" class="img-thumbnail" style="width: 100px; height: 100px;" />
                                    </a>
                                </div>
                                <div class="col-4">
                                    <h5 class="product-name">
                                        <a asp-page="/UserMenu/ProductDetailsMenu" asp-route-id="@item.ProductId" class="text-primary">@item.ProductName</a>
                                    </h5>
                                    <p class="text-muted">ProCode: @item.ProductId</p>
                                </div>
                                <div class="col-2 text-center">
                                    <form method="post" asp-page-handler="UpdateQuantity" class="quantity-form">
                                        <div class="quantity-group">
                                            <input type="hidden" name="ProductId" value="@item.ProductId" />
                                            <input type="number" name="Quantity" class="form-control form-control-sm text-center quantity-input" value="@item.Quantity" min="1" max="@item.AvailableQuantity" id="quantity-@item.ProductId" oninput="validateQuantity(this)" />
                                            <button type="submit" class="btn btn-primary btn-sm quantity-button">Cập nhật</button>
                                        </div>
                                    </form>
                                </div>
                                <div class="col-2 text-end">
                                    <h5 id="total-@item.ProductId">@string.Format("{0:n0}₫", item.Quantity * item.Price)</h5>
                                </div>
                                <div class="col-2 text-end">
                                    <form method="post" asp-page-handler="RemoveItem" onsubmit="return confirm('Bạn có chắc muốn xóa sản phẩm này khỏi giỏ hàng không?');">
                                        <input type="hidden" name="ProductId" value="@item.ProductId" />
                                        <button type="submit" class="btn btn-link text-muted">Xóa</button>
                                    </form>
                                </div>
                            </div>
                            <hr />
                        }
                    </div>
                </div>
            </div>

            <div class="col-md-3">
                <!-- Các card khác (Khuyến mãi, Địa chỉ giao hàng, Thanh toán) -->
                <!-- Địa chỉ giao hàng card -->
                <div class="card mb-3">
                    <div class="card-header">
                        <span>Địa chỉ giao hàng</span>
                    </div>
                    <div class="card-body">
                        <p>@Model.ShippingAddress</p>
                    </div>
                </div>
                <!-- Thanh toán card -->
                <div class="card">
                    <div class="card-header">
                        <span>Thanh toán</span>
                    </div>
                    <div class="card-body">
                        <div class="d-flex justify-content-between">
                            <span>Tổng tạm tính</span>
                            <span id="total-price">@string.Format("{0:n0}₫", Model.TotalPrice)</span>
                        </div>
                        <div class="d-flex justify-content-between">
                            <span>Voucher</span>
                            <span id="voucher-discount">- @string.Format("{0:n0}₫", (Model.TotalPrice * 0.1))</span>
                        </div>
                        <div class="d-flex justify-content-between">
                            <span>Thành tiền</span>
                            <span id="final-price">@string.Format("{0:n0}₫", Model.TotalPrice - (Model.TotalPrice * 0.1))</span>
                        </div>
                        <button class="btn btn-primary btn-lg btn-block mt-3">THANH TOÁN</button>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@section Scripts {
    <script>
        function updateQuantity(productId, change) {
            var quantityInput = document.getElementById(`quantity-${productId}`);
            var currentQuantity = parseInt(quantityInput.value);
            var newQuantity = currentQuantity + change;

            if (newQuantity <= 0) {
                // Xóa sản phẩm nếu số lượng là 0 hoặc âm
                document.querySelector(`#cart-item-${productId} form`).submit();
                return;
            }

            // Cập nhật số lượng trên giao diện
            quantityInput.value = newQuantity;

            // Tính toán và cập nhật giá thành
            var pricePerItem = parseFloat(document.querySelector(`#total-${productId}`).innerText.replace('₫', '').replace(',', ''));
            var newTotal = newQuantity * pricePerItem;
            document.querySelector(`#total-${productId}`).innerText = `${newTotal.toFixed(0)}₫`;

            // Gửi yêu cầu AJAX để cập nhật số lượng
            var xhr = new XMLHttpRequest();
            xhr.open('POST', '/UserMenu/Cart?handler=UpdateQuantity', true);
            xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
            xhr.onload = function () {
                if (xhr.status === 200) {
                    // Cập nhật tổng tiền
                    var totalPrice = parseFloat(document.getElementById('total-price').innerText.replace('₫', '').replace(',', ''));
                    var voucherDiscount = totalPrice * 0.1;
                    var finalPrice = totalPrice - voucherDiscount;
                    document.getElementById('total-price').innerText = `${totalPrice.toFixed(0)}₫`;
                    document.getElementById('voucher-discount').innerText = `- ${voucherDiscount.toFixed(0)}₫`;
                    document.getElementById('final-price').innerText = `${finalPrice.toFixed(0)}₫`;
                }
            };
            xhr.send(`ProductId=${productId}&Quantity=${newQuantity}`);
        }

        function clearCart() {
            if (confirm('Bạn có chắc muốn xóa tất cả sản phẩm khỏi giỏ hàng?')) {
                // Remove all cart items
                var cartItems = document.querySelectorAll('[id^="cart-item-"]');
                cartItems.forEach(function (item) {
                    item.remove();
                });

                // Update total prices to 0
                document.getElementById('total-price').innerHTML = '0₫';
                document.getElementById('final-price').innerHTML = '0₫';
            }
        }

        function validateQuantity(input) {
            var maxQuantity = parseInt(input.getAttribute('max'));
            var currentQuantity = parseInt(input.value);

            if (currentQuantity > maxQuantity) {
                alert(`Số lượng tối đa cho sản phẩm này là ${maxQuantity}.`);
                input.value = maxQuantity;
            }
        }
    </script>
}

<style>
    .cart-item .product-name {
        font-size: 16px;
        font-weight: bold;
    }

    .quantity-form {
        display: flex;
        align-items: center;
    }

    .quantity-group {
        display: flex;
        width: 200px; /* Điều chỉnh theo nhu cầu */
        align-items: center;
    }

    .quantity-input,
    .quantity-button {
        flex: 1; /* Đảm bảo các phần tử có cùng kích thước */
    }

    .quantity-input {
        margin-right: 5px; /* Khoảng cách giữa ô nhập và nút */
    }

    .quantity-button {
        height: calc(1.5em + .75rem + 2px); /* Same height as the input */
        display: flex;
        justify-content: center;
        align-items: center;
        padding: 0.375rem 0.75rem; /* Same padding as the input */
    }

    .cart-item h5 {
        margin: 0;
    }

    .card-header, .card-body {
        padding: 0.75rem 1rem;
    }
</style>
